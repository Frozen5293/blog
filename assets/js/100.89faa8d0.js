(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{428:function(s,n,a){"use strict";a.r(n);var t=a(8),e=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[n("br"),s._v("\n#include "),n("iostream",[s._v("\n#include "),n("vector",[s._v("\n#include "),n("memory",[s._v("\n#include "),n("cstdio",[s._v("\n#include "),n("fstream",[s._v("\n#include "),n("cassert",[s._v("\n#include "),n("functional")],1)],1)],1)],1)],1)],1)],1),s._v(" "),n("h3",{attrs:{id:"unique-指针-move操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#unique-指针-move操作"}},[s._v("#")]),s._v(" Unique 指针，Move操作")]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 智能指针\nstruct B {\n  virtual void bar() { std::cout << "B::bar\\n"; }\n  virtual ~B() = default;\n};\nstruct D : B\n{\n    D() { std::cout << "D::D\\n";  }\n    ~D() { std::cout << "D::~D\\n";  }\n    void bar() override { std::cout << "D::bar\\n";  }\n};\n \n// 消费 unique_ptr 的函数能以值或以右值引用接收它\nstd::unique_ptr<D> pass_through(std::unique_ptr<D> p)\n{\n    p->bar();\n    return p;\n}\n \nvoid close_file(std::FILE* fp) { std::fclose(fp); }\n \nint main()\n{\n   /// unique 指针存在所有权问题\n  std::cout << "unique ownership semantics demo\\n";\n  {\n      auto p = std::make_unique<D>(); // p 是占有 D 的 unique_ptr\n      /// 这里采用移动操作，使得p不在享有这个地址，或者说值的所有权交给了q\n      auto q = pass_through(std::move(p)); \n      assert(!p); // 现在 p 不占有任何内容并保有空指针\n      q->bar();   // 而 q 占有 D 对象\n  } // ~D 调用于此\n \n \n  std::cout << "Runtime polymorphism demo\\n";\n  {\n    std::unique_ptr<B> p = std::make_unique<D>(); // p 是占有 D 的 unique_ptr\n                                                  // 作为指向基类的指针\n    /// 可以解引用 调用操作，和指针一样\n    p->bar(); // 虚派发\n   /// unique 可以存在容器里\n    std::vector<std::unique_ptr<B>> v;  // unique_ptr 能存储于容器\n    v.push_back(std::make_unique<D>());\n    v.push_back(std::move(p));\n    // emplace_back 调用构造函数的push_back\n    v.emplace_back(new D);\n    for(auto& p: v) p->bar(); // 虚派发\n  } // ~D called 3 times\n \n  std::cout << "Custom deleter demo\\n";\n  std::ofstream("demo.txt") << \'x\'; // 准备要读的文件\n  {\n      std::unique_ptr<std::FILE, void (*)(std::FILE*) > fp(std::fopen("demo.txt", "r"),\n                                                           close_file);\n      if(fp) // fopen 可以打开失败；该情况下 fp 保有空指针\n        std::cout << (char)std::fgetc(fp.get()) << \'\\n\';\n  } // fclose() 调用于此，但仅若 FILE* 不是空指针\n    // （即 fopen 成功）\n \n  std::cout << "Custom lambda-expression deleter demo\\n";\n  {\n    std::unique_ptr<D, std::function<void(D*)>> p(new D, [](D* ptr)\n        {\n            std::cout << "destroying from a custom deleter...\\n";\n            delete ptr;\n        });  // p 占有 D\n    p->bar();\n  } // 调用上述 lambda 并销毁 D\n \n  std::cout << "Array form of unique_ptr demo\\n";\n  {\n      std::unique_ptr<D[]> p{new D[3]};\n  } // 调用 ~D 3 次\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);